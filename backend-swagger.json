{
    "openapi": "3.1.0",
    "info": {
        "title": "Rohlik Assignment API",
        "description": "API documentation for Rohlik Assignment",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost/rohlik-assignment-backend",
            "description": "Generated server url"
        }
    ],
    "paths": {
        "/api/v1/products/{id}": {
            "get": {
                "tags": [
                    "product-controller"
                ],
                "summary": "Get product by ID",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResponseDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResponseDto"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "product-controller"
                ],
                "summary": "Update an existing product",
                "description": "Updates an existing product with the provided details.\nThe request body must contain the product name, description, price, and stock quantity.\n\nThe response will include the updated product's ID and other details.\n",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequestDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Product update failed due to validation errors",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResponseDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResponseDto"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "product-controller"
                ],
                "summary": "Delete an existing product",
                "description": "Deletes an existing product with the provided id.\n\nThe product must not have any associated order items.\n",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/v1/products": {
            "get": {
                "tags": [
                    "product-controller"
                ],
                "summary": "Get all products",
                "description": "Retrieves a paginated (or additionally sorted) list of all products.\n\nThe response includes product details such as ID, name, description, price, and stock quantity.\n",
                "operationId": "getAllProducts",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product list retrieved successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductResponseDto"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "product-controller"
                ],
                "summary": "Create a new product",
                "description": "Creates a new product with the provided details.\nThe request body must contain the product name, description, price, and stock quantity.\n\nThe response will include the created product's ID and other details.\n",
                "operationId": "createProduct",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequestDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Product creation failed due to validation errors",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResponseDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/orders": {
            "get": {
                "tags": [
                    "order-controller"
                ],
                "summary": "Get all orders",
                "description": "Retrieves a paginated (or additionally sorted) list of all orders.\n\nThe response includes order details such as ID, status, items and total price.\n",
                "operationId": "getAllOrders",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order list retrieved successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderResponseDto"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "order-controller"
                ],
                "summary": "Create a new order",
                "description": "Creates a new order with the provided details.\nThe order is initially in the 'RESERVED' status and can be paid for or cancelled later.\n\nThe order will expire after a predefined time if not paid.\n",
                "operationId": "createOrder",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequestDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order creation failed due to validation errors",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResponseDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Any order product not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResponseDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/orders/{id}/pay": {
            "post": {
                "tags": [
                    "order-controller"
                ],
                "summary": "Pay for an order",
                "description": "Pays for an existing order by ID with the provided payment details.\nThe order must be in 'RESERVED' status and not already paid or cancelled.\n",
                "operationId": "payForOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentRequestDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Order paid successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order creation failed due to validation errors",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResponseDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResponseDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/orders/{id}/cancel": {
            "post": {
                "tags": [
                    "order-controller"
                ],
                "summary": "Cancel an order",
                "description": "Cancels an existing order by ID.\nThe order must be in 'RESERVED' status and not already paid or cancelled.\n",
                "operationId": "cancelOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order paid successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order creation failed due to validation errors",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResponseDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResponseDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sample": {
            "get": {
                "tags": [
                    "sample-controller"
                ],
                "summary": "Sample operation",
                "operationId": "getSample",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/orders/{id}": {
            "get": {
                "tags": [
                    "order-controller"
                ],
                "summary": "Get order by ID",
                "operationId": "getOrderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResponseDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResponseDto"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ProductRequestDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1
                    },
                    "pricePerUnit": {
                        "type": "number"
                    },
                    "stockQuantity": {
                        "type": "number"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ProductResponseDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pricePerUnit": {
                        "type": "number"
                    },
                    "stockQuantity": {
                        "type": "number"
                    }
                }
            },
            "OrderItemDto": {
                "type": "object",
                "properties": {
                    "productId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "quantity": {
                        "type": "number"
                    }
                }
            },
            "OrderRequestDto": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemDto"
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "items"
                ]
            },
            "OrderResponseDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemDto"
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "RESERVED",
                            "PAID",
                            "CANCELLED"
                        ]
                    },
                    "totalPrice": {
                        "type": "number"
                    }
                }
            },
            "PaymentRequestDto": {
                "type": "object",
                "properties": {
                    "paymentMethod": {
                        "type": "string",
                        "minLength": 1
                    },
                    "paymentDetails": {
                        "type": "string",
                        "minLength": 1
                    },
                    "amount": {
                        "type": "number"
                    }
                },
                "required": [
                    "paymentDetails",
                    "paymentMethod"
                ]
            },
            "PageProductResponseDto": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductResponseDto"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageableObject": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "pageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unpaged": {
                        "type": "boolean"
                    },
                    "paged": {
                        "type": "boolean"
                    }
                }
            },
            "SortObject": {
                "type": "object",
                "properties": {
                    "empty": {
                        "type": "boolean"
                    },
                    "unsorted": {
                        "type": "boolean"
                    },
                    "sorted": {
                        "type": "boolean"
                    }
                }
            },
            "PageOrderResponseDto": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderResponseDto"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            }
        }
    }
}
